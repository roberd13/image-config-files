# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# for production, you should probably set the root to INFO
# and the pattern to %c instead of %l.  (%l is slower.)

# output messages into a rolling log file as well as stdout
log4j.rootLogger=DEBUG,CASS

# stdout
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%-5p [%t]: %m%n %l

# Cassandra Appender & options
log4j.appender.CASS=com.datastax.logging.appender.CassandraAppender

#the following settings are the default values
#log4j.appender.CASS.hosts = localhost
#log4j.appender.CASS.port = 9042
#log4j.appender.CASS.keyspaceName = Logging
#log4j.appender.CASS.columnFamily = log_entries
#log4j.appender.CASS.replicationFactor = 1
#log4j.appender.CASS.consistencyLevelWrite = ONE

# Use With Secured DSE Clusters
# =============================

# Enable plaintext authentication (PasswordAuthenticator or LdapAuthenticator in cassandra.yaml)
#log4j.appender.CASS.username = "cassandra"
#log4j.appender.CASS.password = "cassandra"

# Enable SSL with default keystore and truststore.
#log4j.appender.CASS.sslOptions = { }

# Enable SSL with custom keystore and truststore
#log4j.appender.CASS.sslOptions = { \
#  "ssl.keystore":"/usr/local/dse/resources/dse/conf/.keystore", \
#  "ssl.keystore.password":"cassandra", \
#  "ssl.truststore":"/usr/local/dse/resources/dse/conf/.truststore", \
#  "ssl.truststore.password":"cassandra" \
#}

# Kerberos Options
# ================
# Kerberos options are set using a JAAS config file. The location of
# the file can be specified using the java.security.auth.login.config
# system property or by adding a login.config.url.n entry in the
# java.security properties file.  See
# http://docs.oracle.com/javase/1.4.2/docs/guide/security/jaas/tutorials/LoginConfigFile.html
# for further details on the Login configuration file and
# http://docs.oracle.com/javase/6/docs/technotes/guides/security/jaas/tutorials/GeneralAcnOnly.html
# for more on JAAS in general.

# Enable kerberos.  You also need to pass the jaas.conf path to the JVM;
#
# JAAS parameters for Kerberos; they will be ignored if
# Kerberos is not enabled in log4j.properties
# export HADOOP_OPTS="-Ddse.sasl.protocol=$PROTOCOL -Djava.security.auth.login.config=$DSE_HOME/<path-to-jaas-file-folder>/jaas.conf"
#
# Example jaas.conf file:
# DseClient {
#  com.sun.security.auth.module.Krb5LoginModule required
#           useTicketCache=true
#           renewTGT=true;
# };
#


# log4j.appender.CASS.authProviderOptions = { \
#   "auth.class":"com.datastax.driver.auth.DseAuthProvider" \
# }
